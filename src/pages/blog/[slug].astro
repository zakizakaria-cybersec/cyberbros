---
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";
import MainLayout from "../../layouts/MainLayout.astro";

export const prerender = true;

export const getStaticPaths = (async () => {
  const blogPosts = await getCollection("blog");
  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { Content } = await post.render();

// Format date for display
const formattedDate = post.data.publishDate.toLocaleDateString('en-US', { 
  year: 'numeric', 
  month: 'long', 
  day: 'numeric' 
});

// Generate structured data for SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": post.data.title,
  "description": post.data.description,
  "author": {
    "@type": "Organization",
    "name": post.data.author
  },
  "datePublished": post.data.publishDate.toISOString(),
  "dateModified": post.data.publishDate.toISOString(),
  "keywords": post.data.tags.join(", "),
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": `https://cyberbros.com/blog/${post.slug}`
  },
  "publisher": {
    "@type": "Organization",
    "name": "CyberBros Security",
    "logo": {
      "@type": "ImageObject",
      "url": "https://cyberbros.com/android-chrome-512x512.png"
    }
  }
};
---

<MainLayout 
  title={`${post.data.title} | CyberBros Security`}
  description={post.data.description}
>
  <!-- SEO Meta Tags -->
  <meta slot="head" property="og:type" content="article" />
  <meta slot="head" property="og:title" content={post.data.title} />
  <meta slot="head" property="og:description" content={post.data.description} />
  <meta slot="head" property="og:url" content={`https://cyberbros.com/blog/${post.slug}`} />
  <meta slot="head" property="article:published_time" content={post.data.publishDate.toISOString()} />
  <meta slot="head" property="article:author" content={post.data.author} />
  {post.data.tags.map(tag => (
    <meta slot="head" property="article:tag" content={tag} />
  ))}
  
  <!-- Twitter Card -->
  <meta slot="head" name="twitter:card" content="summary_large_image" />
  <meta slot="head" name="twitter:title" content={post.data.title} />
  <meta slot="head" name="twitter:description" content={post.data.description} />
  
  <!-- Structured Data -->
  <script slot="head" type="application/ld+json" set:html={JSON.stringify(structuredData)} />

  <article class="bg-gray-900 min-h-screen py-20">
    <div class="max-w-4xl mx-auto px-6">
      <!-- Back to Blog -->
      <a href="/blog" class="inline-flex items-center gap-2 text-indigo-400 hover:text-indigo-300 mb-8 transition">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
        </svg>
        Back to Blog
      </a>

      <!-- Article Header -->
      <header class="mb-12 pb-8 border-b border-gray-800">
        <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">{post.data.title}</h1>
        <p class="text-xl text-gray-400 mb-6">{post.data.description}</p>
        
        <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500">
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
            </svg>
            <span>{post.data.author}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
            </svg>
            <time datetime={post.data.publishDate.toISOString()}>{formattedDate}</time>
          </div>
          {post.data.readTime && (
            <div class="flex items-center gap-2">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span>{post.data.readTime}</span>
            </div>
          )}
        </div>

        {post.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mt-4">
            {post.data.tags.map(tag => (
              <span class="px-3 py-1 bg-indigo-600/20 text-indigo-400 text-sm rounded-full border border-indigo-600/30">
                #{tag}
              </span>
            ))}
          </div>
        )}
      </header>

      <!-- Article Content -->
      <div class="prose prose-invert prose-lg max-w-none">
        <Content />
      </div>

      <!-- Call to Action -->
      <div class="mt-16 pt-8 border-t border-gray-800">
        <div class="bg-linear-to-r from-indigo-600/20 to-purple-600/20 border border-indigo-600/30 rounded-lg p-8 text-center">
          <h3 class="text-2xl font-bold text-white mb-4">
            Want to Learn More?
          </h3>
          <p class="text-gray-400 mb-6 max-w-2xl mx-auto">
            Get expert cybersecurity training and upskilling programs from CyberBros Security. 
            Master penetration testing, security analysis, and advanced security techniques.
          </p>
          <a 
            href="/#contact" 
            class="inline-flex items-center gap-2 bg-indigo-600 text-white px-6 py-3 rounded-md hover:bg-indigo-500 transition"
          >
            Contact Us
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"/>
            </svg>
          </a>
        </div>
      </div>

      <!-- Related Posts / Back to Blog -->
      <div class="mt-12 text-center">
        <a 
          href="/blog" 
          class="inline-flex items-center gap-2 text-indigo-400 hover:text-indigo-300 transition"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
          </svg>
          View All Posts
        </a>
      </div>
    </div>
  </article>
</MainLayout>

<style is:global>
  .prose {
    color: #e5e7eb;
  }

  .prose h2 {
    color: #ffffff;
    font-size: 2rem;
    font-weight: 700;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    border-bottom: 2px solid #4f46e5;
    padding-bottom: 0.5rem;
  }

  .prose h3 {
    color: #ffffff;
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
  }

  .prose h4 {
    color: #ffffff;
    font-size: 1.25rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.5rem;
  }

  .prose p {
    margin-bottom: 1.25rem;
    line-height: 1.8;
  }

  .prose code {
    background-color: #1f2937;
    color: #a78bfa;
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-size: 0.9em;
  }

  .prose pre {
    background-color: #111827;
    border: 1px solid #374151;
    border-radius: 0.5rem;
    padding: 1.5rem;
    overflow-x: auto;
    margin: 1.5rem 0;
  }

  .prose pre code {
    background-color: transparent;
    padding: 0;
    color: #e5e7eb;
    font-size: 0.875rem;
  }

  .prose ul, .prose ol {
    margin: 1.25rem 0;
    padding-left: 1.5rem;
  }

  .prose li {
    margin-bottom: 0.5rem;
  }

  .prose a {
    color: #818cf8;
    text-decoration: underline;
    transition: color 0.2s;
  }

  .prose a:hover {
    color: #a5b4fc;
  }

  .prose blockquote {
    border-left: 4px solid #4f46e5;
    padding-left: 1.5rem;
    margin: 1.5rem 0;
    font-style: italic;
    color: #9ca3af;
    background-color: #1f2937;
    padding: 1rem 1.5rem;
    border-radius: 0.25rem;
  }

  .prose blockquote strong {
    color: #ffffff;
  }

  .prose strong {
    color: #ffffff;
    font-weight: 600;
  }

  .prose em {
    font-style: italic;
  }

  .prose img {
    border-radius: 0.5rem;
    margin: 2rem 0;
  }

  .prose hr {
    border-color: #374151;
    margin: 2rem 0;
  }
</style>
